<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:ide="http://oppidum.com/ide" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
    <start>
        <element name="Association" ide:appli="demo">
            <element name="Info" ide:store="resource" ide:resource-name="info">
                <element name="Name">
                    <ref name="StringType"/>
                </element>
                <element name="Description">
                    <element name="About">
                        <element name="Title">
                            <ref name="StringType"/>
                        </element>
                        <oneOrMore>
                            <element name="Parag">
                                <ref name="StringType"/>
                            </element>
                        </oneOrMore>
                    </element>
                    <element name="Activities">
                        <element name="Title">
                            <ref name="StringType"/>
                        </element>
                        <oneOrMore>
                            <element name="Parag">
                                <ref name="StringType"/>
                            </element>
                        </oneOrMore>
                    </element>
                </element>
            </element>
            <element name="Persons" ide:store="resource" ide:resource-name="persons">
                <oneOrMore>
                    <element name="Person">
                        <element name="Id">
                            <ref name="IdType"/>
                        </element>
                        <ref name="PersonType"/>
                        <optional>
                            <element name="Membership">
                                <oneOrMore>
                                    <element name="Member">
                                        <element name="From">
                                            <data type="date"/>
                                        </element>
                                        <optional>
                                            <element name="To">
                                                <data type="date"/>
                                            </element>
                                        </optional>
                                    </element>
                                </oneOrMore>
                            </element>
                        </optional>
                    </element>
                </oneOrMore>
            </element>
        </element>
    </start>

    <define name="IdType">
        <data type="positiveInteger"/>
    </define>

    <define name="ActivityStatusType">
        <choice>
            <value>in-preparation</value>
            <value>proposed</value>
            <value>under-evaluation</value>
            <value>accepted</value>
            <value>rejected</value>
            <value>running</value>
            <value>closed</value>
        </choice>
    </define>

    <define name="PersonType">
        <interleave>
            <element name="Name">
                <ref name="PersonNameType"/>
            </element>
            <element name="Gender">
                <ref name="GenderType"/>
            </element>
        </interleave>
    </define>

    <define name="PersonNameType">
        <interleave>
            <element name="FirstName">
                <ref name="StringType"/>
            </element>
            <element name="LastName">
                <ref name="StringType"/>
            </element>
        </interleave>
    </define>

    <define name="GenderType">
        <choice>
            <value>F</value>
            <value>M</value>
            <value>I</value>
        </choice>
    </define>
    
    <define name="ScoreType">
        <data type="positiveInteger">
            <param name="minInclusive">1</param>
            <param name="maxInclusive">5</param>
        </data>
    </define>

    <define name="TripType">
        <element name="Date">
            <data type="date"/>
        </element>
        <element name="Time">
            <data type="time"/>
        </element>
        <choice>
            <element name="From">
                <ref name="StringType"/>
            </element>
            <element name="To">
                <ref name="StringType"/>
            </element>
        </choice>
    </define>
    
    <define name="SlotType">
        <element name="Start">
            <data type="date"/>
        </element>
        <optional>
            <element name="End">
                <data type="date"/>
            </element>
        </optional>
    </define>
    
    <define name="EquipmentCategoryType">
        <choice>
            <value>cooking</value>
            <value>manual-work</value>
            <value>health</value>
            <value>sport</value>
        </choice>
    </define>

    <!--  Content -->
    <define name="ContentType">
        <oneOrMore>
            <choice>
                <ref name="ParagType"/>
                <ref name="ListType"/>
                <ref name="ImageType"/>
            </choice>
        </oneOrMore>
    </define>
    
    <define name="TextualContent">
        <oneOrMore>
            <choice>
                <ref name="ParagType"/>
                <ref name="ListType"/>
            </choice>
        </oneOrMore>
    </define>

    <define name="ParagType">
        <element name="Parag">
            <oneOrMore>
                <choice>
                    <element name="Fg">
                        <optional>
                            <attribute name="Kind">
                                <ref name="FragmentKindType"/>
                            </attribute>
                        </optional>
                        <ref name="StringType"/>
                    </element>
                    <ref name="Link"/>
                </choice>
            </oneOrMore>
        </element>
    </define>

    <define name="Link">
        <element name="Link">
            <element name="URL">
                <data type="anyURI"/>
            </element>
            <element name="AnchorText">
                <ref name="StringType"/>
            </element>
        </element>
    </define>

    <define name="ListType">
        <element name="List">
            <optional>
                <attribute name="Ordered">
                    <ref name="FlagType"/>
                </attribute>
            </optional>
            <oneOrMore>
                <element name="Item">
                    <oneOrMore>
                        <choice>
                            <element name="Fg">
                                <optional>
                                    <attribute name="Kind">
                                        <ref name="FragmentKindType"/>
                                    </attribute>
                                </optional>
                                <ref name="StringType"/>
                            </element>
                            <ref name="Link"/>
                        </choice>
                    </oneOrMore>
                </element>
            </oneOrMore>
        </element>
    </define>

    <define name="FragmentKindType">
        <choice>
            <value>em</value>
            <value>strong</value>
        </choice>
    </define>

    <define name="ImageType">
        <optional>
            <element name="Caption">
                <ref name="StringType"/>
            </element>
        </optional>
        <element name="Location">
            <data type="anyURI"/>
        </element>
    </define>
    
    <!-- A string should not be empty: to avoid empty tags in XML instances -->
    <define name="StringType">
        <data type="string">
            <param name="pattern">(\s*[^\s]\s*)+</param>
        </data>
    </define>
    
    <!-- Only 'true' or 'false' values allowed -->
    <define name="BooleanType">
        <data type="boolean">
            <except>
                <value>0</value>
                <value>1</value>
            </except>
        </data>
    </define>
    
    <define name="FlagType">
        <data type="boolean">
            <except>
                <value>false</value>
                <value>0</value>
                <value>1</value>
            </except>
        </data>
    </define>

</grammar>